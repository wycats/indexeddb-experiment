// ==========================================================================
// Project:  Ember Data
// Copyright: Â©2011 Living Social Inc. and contributors.
// License:   Licensed under MIT license (see license.js)
// ==========================================================================



(function(){window.DS=Ember.Namespace.create({CURRENT_API_REVISION:5})})(),function(){var a=Ember.get,b=Ember.set;DS.RecordArray=Ember.ArrayProxy.extend(Ember.Evented,{type:null,content:null,isLoaded:!1,store:null,objectAtContent:function(b){var c=a(this,"content"),d=c.objectAt(b),e=a(this,"store");if(d!==undefined)return e.findByClientId(a(this,"type"),d)},materializedObjectAt:function(b){var c=a(this,"content").objectAt(b);if(!c)return;if(a(this,"store").recordIsMaterialized(c))return this.objectAt(b)}})}(),function(){var a=Ember.get;DS.FilteredRecordArray=DS.RecordArray.extend({filterFunction:null,isLoaded:!0,replace:function(){var b=a(this,"type").toString();throw new Error("The result of a client-side filter (on "+b+") is immutable.")},updateFilter:Ember.observer(function(){var b=a(this,"store");b.updateRecordArrayFilter(this,a(this,"type"),a(this,"filterFunction"))},"filterFunction")})}(),function(){var a=Ember.get,b=Ember.set;DS.AdapterPopulatedRecordArray=DS.RecordArray.extend({query:null,replace:function(){var b=a(this,"type").toString();throw new Error("The result of a server query (on "+b+") is immutable.")},load:function(c){var d=a(this,"store"),e=a(this,"type"),f=d.loadMany(e,c).clientIds;this.beginPropertyChanges(),b(this,"content",Ember.A(f)),b(this,"isLoaded",!0),this.endPropertyChanges(),this.trigger("didLoad")}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.guidFor,d=function(){this.hash={},this.list=[]};d.prototype={add:function(a){var b=this.hash,d=c(a);if(b.hasOwnProperty(d))return;b[d]=!0,this.list.push(a)},remove:function(a){var b=this.hash,d=c(a);if(!b.hasOwnProperty(d))return;delete b[d];var e=this.list,f=Ember.EnumerableUtils.indexOf(this,a);e.splice(f,1)},isEmpty:function(){return this.list.length===0}};var e=Ember.State.extend({recordWasAdded:function(b,c){var d=b.dirty,e;d.add(c),e=function(){a(c,"isDirty")||(c.removeObserver("isDirty",e),b.send("childWasSaved",c))},c.addObserver("isDirty",e)},recordWasRemoved:function(b,c){var d=b.dirty,e;d.add(c),e=function(){c.removeObserver("isDirty",e),a(c,"isDirty")||b.send("childWasSaved",c)},c.addObserver("isDirty",e)}}),f={loading:Ember.State.create({isLoaded:!1,isDirty:!1,loadedRecords:function(a,b){a.decrement(b)},becameLoaded:function(a){a.transitionTo("clean")}}),clean:e.create({isLoaded:!0,isDirty:!1,recordWasAdded:function(a,b){this._super(a,b),a.goToState("dirty")},update:function(a,c){var d=a.manyArray;b(d,"content",c)}}),dirty:e.create({isLoaded:!0,isDirty:!0,childWasSaved:function(a,b){var c=a.dirty;c.remove(b),c.isEmpty()&&a.send("arrayBecameSaved")},arrayBecameSaved:function(a){a.goToState("clean")}})};DS.ManyArrayStateManager=Ember.StateManager.extend({manyArray:null,initialState:"loading",states:f,counter:0,init:function(){this._super(),this.dirty=new d,this.counter=a(this,"manyArray.length")},decrement:function(a){var b=this.counter=this.counter-a;b===0&&this.send("becameLoaded")}})}(),function(){var a=Ember.get,b=Ember.set;DS.ManyArray=DS.RecordArray.extend({init:function(){this._super.apply(this,arguments),this._changesToSync=Ember.OrderedSet.create()},owner:null,isLoaded:!1,loadingRecordsCount:function(a){this.loadingRecordsCount=a},loadedRecord:function(){this.loadingRecordsCount--,this.loadingRecordsCount===0&&(b(this,"isLoaded",!0),this.trigger("didLoad"))},fetch:function(){var b=a(this,"content"),c=a(this,"store"),d=a(this,"type");c.fetchUnloadedClientIds(d,b)},replaceContent:function(a,b,c){c=c.map(function(a){return a.get("clientId")},this),this._super(a,b,c)},arrangedContentDidChange:function(){this.fetch()},arrayContentWillChange:function(b,c,d){var e=a(this,"owner"),f=a(this,"name");if(!e._suspendedAssociations)for(var g=b;g<b+c;g++){var h=this.materializedObjectAt(g);if(!h)continue;var i=DS.OneToManyChange.forChildAndParent(h,e);i.hasManyName=f,i.oldParent===undefined&&(i.oldParent=e),i.newParent=null,this._changesToSync.add(i)}return this._super.apply(this,arguments)},arrayContentDidChange:function(b,c,d){this._super.apply(this,arguments);var e=a(this,"owner"),f=a(this,"name");if(!e._suspendedAssociations){for(var g=b;g<b+d;g++){var h=this.materializedObjectAt(g);if(!h)continue;var i=DS.OneToManyChange.forChildAndParent(h,e);i.hasManyName=f,i.newParent=e,this._changesToSync.add(i)}this._changesToSync.forEach(function(a){a.sync()}),this._changesToSync.clear()}},assignInverse:function(c){var d=DS.inverseNameFor(c.constructor,a(this,"owner.constructor"),"belongsTo"),e=a(this,"owner"),f;return d&&(f=a(c,d),f!==e&&b(c,d,e)),f},removeInverse:function(c){var d=DS.inverseNameFor(c.constructor,a(this,"owner.constructor"),"belongsTo");if(d){var e=a(c,d);e===a(this,"owner")&&b(c,d,null)}},createRecord:function(b,c){var d=a(this,"owner"),e=a(d,"store"),f=a(this,"type"),g;return c=c||a(d,"transaction"),g=e.createRecord.call(e,f,b,c),this.pushObject(g),g},removeFromContent:function(b){var c=a(b,"clientId");a(this,"content").removeObject(c)},addToContent:function(b){var c=a(b,"clientId");a(this,"content").addObject(c)}})}(),function(){}(),function(){var a=Ember.get,b=Ember.set,c=Ember.String.fmt,d=Ember.EnumerableUtils.removeObject,e=Ember.EnumerableUtils.forEach,f=function(a,b){this.oldParent=a,this.child=b},g=function(){return[]};DS.Transaction=Ember.Object.extend({init:function(){b(this,"buckets",{clean:Ember.OrderedSet.create(),created:Ember.OrderedSet.create(),updated:Ember.OrderedSet.create(),deleted:Ember.OrderedSet.create(),inflight:Ember.OrderedSet.create()}),b(this,"relationships",Ember.OrderedSet.create())},createRecord:function(b,c){var d=a(this,"store");return d.createRecord(b,c,this)},isEqualOrDefault:function(b){if(this===b||b===a(this,"store.defaultTransaction"))return!0},isDefault:Ember.computed(function(){return this===a(this,"store.defaultTransaction")}),add:function(b){var c=a(b,"transaction"),d=a(this,"store.defaultTransaction");if(c===this)return;this.adoptRecord(b)},relationshipBecameDirty:function(b){a(this,"relationships").add(b)},relationshipBecameClean:function(b){a(this,"relationships").remove(b)},commit:function(){var b=a(this,"store"),d=a(b,"_adapter"),f=function(a){var b=a.toArray();return e(b,function(a){a.send("willCommit")}),Ember.A(b)},g=a(this,"relationships"),h={created:f(this.bucketForType("created")),updated:f(this.bucketForType("updated")),deleted:f(this.bucketForType("deleted")),relationships:g};this.removeCleanRecords();if(h.created.length||h.updated.length||h.deleted.length||!g.isEmpty())if(d&&d.commit)d.commit(b,h);else throw c("Adapter is either null or does not implement `commit` method",this)},rollback:function(){var b=a(this,"store"),c;["created","updated","deleted","inflight"].forEach(function(a){var b=this.bucketForType(a);e(b,function(a){a.send("rollback")}),b.clear()},this),this.removeCleanRecords()},remove:function(b){var c=a(this,"store.defaultTransaction");c.adoptRecord(b)},removeCleanRecords:function(){var a=this.bucketForType("clean");a.forEach(function(a){this.remove(a)},this),a.clear()},bucketForType:function(b){var c=a(this,"buckets");return a(c,b)},adoptRecord:function(c){var d=a(c,"transaction");d&&d.removeFromBucket("clean",c),this.addToBucket("clean",c),b(c,"transaction",this)},addToBucket:function(a,b){this.bucketForType(a).add(b)},removeFromBucket:function(a,b){this.bucketForType(a).remove(b)},recordBecameDirty:function(a,b){this.removeFromBucket("clean",b),this.addToBucket(a,b)},recordBecameInFlight:function(a,b){this.removeFromBucket(a,b),this.addToBucket("inflight",b)},recordIsMoving:function(a,b){this.removeFromBucket(a,b),this.addToBucket("clean",b)},recordBecameClean:function(a,b){this.removeFromBucket(a,b),this.remove(b)}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.String.fmt,d="unloaded",e="loading",f={materialized:!0};DS.Store=Ember.Object.extend({init:function(){var c=a(this,"revision");if(c!==DS.CURRENT_API_REVISION&&!Ember.ENV.TESTING)throw new Error("Error: The Ember Data library has had breaking API changes since the last time you updated the library. Please review the list of breaking changes at https://github.com/emberjs/data/blob/master/BREAKING_CHANGES.md, then update your store's `revision` property to "+DS.CURRENT_API_REVISION);return(!a(DS,"defaultStore")||a(this,"isDefaultStore"))&&b(DS,"defaultStore",this),this.typeMaps={},this.recordCache=[],this.clientIdToId={},this.recordArraysByClientId={},this.loadingRecordArrays={},b(this,"defaultTransaction",this.transaction()),this._super()},transaction:function(){return DS.Transaction.create({store:this})},materializeData:function(b){var c=b.constructor,d=a(b,"clientId"),e=this.typeMapFor(c),g=a(this,"_adapter"),h=e.cidToHash[d];e.cidToHash[d]=f,b.setupData(),g.materialize(b,h)},recordIsMaterialized:function(b){return!!a(this,"recordCache")[b]},adapter:"DS.Adapter",toJSON:function(b,c){return a(this,"_adapter").toJSON(b,c)},_adapter:Ember.computed(function(){var b=a(this,"adapter");return typeof b=="string"&&(b=a(this,b,!1)||a(window,b)),DS.Adapter.detect(b)&&(b=b.create()),b}).property("adapter").cacheable(),clientIdCounter:1,createRecord:function(c,d,e){d=d||{};var f=c._create({store:this});e=e||a(this,"defaultTransaction"),e.adoptRecord(f);var g=d.id,h;Ember.none(g)&&(h=a(this,"adapter"),h&&h.generateIdForRecord&&(g=h.generateIdForRecord(this,f),d.id=g));var i={},j;j=this.pushHash(i,g,c),b(f,"clientId",j),f.send("loadedData");var k=a(this,"recordCache");return k[j]=f,f.setProperties(d),f},deleteRecord:function(a){a.send("deleteRecord")},find:function(a,b,c){if(b===undefined)return this.findAll(a);if(c!==undefined)return this.findMany(a,b,c);if(Ember.typeOf(b)==="object")return this.findQuery(a,b);if(Ember.isArray(b))return this.findMany(a,b);var d=this.typeMapFor(a).idToCid[b];return this.findByClientId(a,d,b)},findByClientId:function(b,d,f){var g=a(this,"recordCache"),h,i;if(d!==undefined)i=g[d],i||(i=this.materializeRecord(b,d,f),h=this.typeMapFor(b).cidToHash,typeof h[d]=="object"&&i.send("loadedData"));else{d=this.pushHash(e,f,b),i=this.materializeRecord(b,d,f);var j=a(this,"_adapter");if(j&&j.find)j.find(this,b,f);else throw c("Adapter is either null or does not implement `find` method",this)}return i},neededClientIds:function(a,b){var c=[],f=this.typeMapFor(a),g=f.cidToHash,h;for(var i=0,j=b.length;i<j;i++)h=b[i],g[h]===d&&(c.push(h),g[h]=e);return c},fetchUnloadedClientIds:function(a,b){var c=this.neededClientIds(a,b);this.fetchMany(a,c)},fetchMany:function(b,d){var e=this.clientIdToId,f=Ember.EnumerableUtils.map(d,function(a){return e[a]});if(!f.length)return;var g=a(this,"_adapter");if(g&&g.findMany)g.findMany(this,b,f);else throw c("Adapter is either null or does not implement `findMany` method",this)},findMany:function(a,b){var c=this.clientIdsForIds(a,b),d=this.neededClientIds(a,c),e=this.createManyArray(a,Ember.A(c)),f=this.loadingRecordArrays,g,h,i;e.loadingRecordsCount(d.length);if(d.length){for(h=0,i=d.length;h<i;h++)g=d[h],f[g]?f[g].push(e):this.loadingRecordArrays[g]=[e];this.fetchMany(a,d)}return e},findQuery:function(b,d){var e=DS.AdapterPopulatedRecordArray.create({type:b,content:Ember.A([]),store:this}),f=a(this,"_adapter");if(f&&f.findQuery)f.findQuery(this,b,d,e);else throw c("Adapter is either null or does not implement `findQuery` method",this);return e},findAll:function(b){var c=this.typeMapFor(b),d=c.findAllCache;if(d)return d;var e=DS.RecordArray.create({type:b,content:Ember.A([]),store:this});this.registerRecordArray(e,b);var f=a(this,"_adapter");return f&&f.findAll&&f.findAll(this,b),c.findAllCache=e,e},filter:function(a,b,c){arguments.length===3?this.findQuery(a,b):arguments.length===2&&(c=b);var d=DS.FilteredRecordArray.create({type:a,content:Ember.A([]),store:this,filterFunction:c});return this.registerRecordArray(d,a,c),d},recordIsLoaded:function(a,b){return!Ember.none(this.typeMapFor(a).idToCid[b])},hashWasUpdated:function(b,c,d){if(a(d,"isDeleted"))return;var e=this.typeMapFor(d.constructor).cidToHash,f=e[c];typeof f=="object"&&this.updateRecordArrays(b,c)},commit:function(){var c=a(this,"defaultTransaction");b(this,"defaultTransaction",this.transaction()),c.commit()},didSaveRecord:function(b,c){a(b,"isNew")?this.didCreateRecord(b):a(b,"isDeleted")&&this.didDeleteRecord(b),c?(b.removeInFlightDirtyFactors(),this.updateId(b,c),this.updateRecordHash(b,c)):(this.didUpdateAttributes(b),this.didUpdateRelationships(b))},didSaveRecords:function(a,b){a.forEach(function(a,c){this.didSaveRecord(a,b&&b[c])},this)},didUpdateAttribute:function(a,b,c){a.adapterDidUpdateAttribute(b,c)},didUpdateAttributes:function(a){a.eachAttribute(function(b){this.didUpdateAttribute(a,b)},this)},didUpdateRelationship:function(a,b){var c=a.getRelationshipChange(b);c.didUpdateRelationship(b,a)},didUpdateRelationships:function(a){a.eachRelationshipChange(function(b,c){c.didUpdateRelationship(a,b)})},updateRecordHash:function(b,c){var d=a(b,"clientId"),e=this.typeMapFor(b.constructor).cidToHash;e[d]=c,b.send("didChangeData")},updateId:function(b,c){var d=this.typeMapFor(b.constructor),e=a(b,"clientId"),f=a(b,"id"),g=a(this,"_adapter").extractId(b.constructor,c);d.idToCid[g]=e,this.clientIdToId[e]=g},didDeleteRecord:function(a){a.adapterDidDelete()},didCreateRecord:function(a){a.adapterDidCreate()},recordWasInvalid:function(a,b){a.send("becameInvalid",b)},registerRecordArray:function(a,b,c){var d=this.typeMapFor(b).recordArrays;d.push(a),this.updateRecordArrayFilter(a,b,c)},createManyArray:function(a,b){var c=DS.ManyArray.create({type:a,content:b,store:this});return b.forEach(function(a){var b=this.recordArraysForClientId(a);b.add(c)},this),c},updateRecordArrayFilter:function(b,c,d){var e=this.typeMapFor(c),f=e.cidToHash,g=e.clientIds,h,i,j,k=a(this,"recordCache"),l,m;for(var n=0,o=g.length;n<o;n++)h=g[n],l=!1,i=f[h],typeof i=="object"&&((m=k[h])?a(m,"isDeleted")||(l=!0):l=!0,l&&this.updateRecordArray(b,d,c,h))},updateRecordArrays:function(b,c){var d=this.typeMapFor(b).recordArrays,e;d.forEach(function(d){e=a(d,"filterFunction"),this.updateRecordArray(d,e,b,c)},this);var f=this.loadingRecordArrays[c],g;if(f){for(var h=0,i=f.length;h<i;h++)f[h].loadedRecord();this.loadingRecordArrays[c]=null}},updateRecordArray:function(b,c,d,e){var f,g;c?(g=this.findByClientId(d,e),f=c(g)):f=!0;var h=a(b,"content"),i=h.indexOf(e)!==-1,j=this.recordArraysForClientId(e);f&&!i?(j.add(b),h.pushObject(e)):!f&&i&&(j.remove(b),h.removeObject(e))},removeFromRecordArrays:function(b){var c=a(b,"clientId"),d=this.recordArraysForClientId(c);d.forEach(function(b){var d=a(b,"content");d.removeObject(c)})},recordArraysForClientId:function(b){var c=a(this,"recordArraysByClientId"),d=c[b];return d||(d=c[b]=Ember.OrderedSet.create()),d},typeMapFor:function(b){var c=a(this,"typeMaps"),d=Ember.guidFor(b),e=c[d];return e?e:c[d]={idToCid:{},clientIds:[],cidToHash:{},recordArrays:[]}},clientIdForId:function(a,b){var c=this.typeMapFor(a).idToCid[b];return c!==undefined?c:this.pushHash(d,b,a)},clientIdsForIds:function(a,b){var c=this.typeMapFor(a),e=c.idToCid;return Ember.EnumerableUtils.map(b,function(b){var c=e[b];return c?c:this.pushHash(d,b,a)},this)},load:function(b,c,d){if(d===undefined){d=c;var e=a(this,"_adapter");c=e.extractId(b,d)}var f=this.typeMapFor(b),g=f.cidToHash,h=f.idToCid[c],i=a(this,"recordCache");if(h!==undefined){g[h]=d;var j=i[h];j&&j.send("loadedData")}else h=this.pushHash(d,c,b);return this.updateRecordArrays(b,h),{id:c,clientId:h}},loadMany:function(b,c,d){var e=Ember.A([]);if(d===undefined){d=c,c=[];var f=a(this,"_adapter");c=Ember.EnumerableUtils.map(d,function(a){return f.extractId(b,a)})}for(var g=0,h=a(c,"length");g<h;g++){var i=this.load(b,c[g],d[g]);e.pushObject(i.clientId)}return{clientIds:e,ids:c}},pushHash:function(a,b,c){var d=this.typeMapFor(c),e=d.idToCid,f=this.clientIdToId,g=d.clientIds,h=d.cidToHash,i=++this.clientIdCounter;return h[i]=a,b&&(e[b]=i,f[i]=b),g.push(i),i},materializeRecord:function(c,d,e){var f;return a(this,"recordCache")[d]=f=c._create({store:this,clientId:d}),b(f,"id",e),a(this,"defaultTransaction").adoptRecord(f),f.send("loadingData"),f},destroy:function(){return a(DS,"defaultStore")===this&&b(DS,"defaultStore",null),this._super()}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.guidFor,d=Ember.computed(function(b){var c=a(this,"parentState");if(c)return a(c,b)}).property(),e=function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},f=function(a){for(var b in a)if(a.hasOwnProperty(b)&&a[b])return!0;return!1},g=function(b){var c=a(b,"record");c.materializeData()},h=function(b,c){var d=c.value,e=c.key,f=a(b,"record"),g=a(f,"data.attributes")[e];d===g?f.removeDirtyFactor(e):f.addDirtyFactor(e),i(b)},i=function(a){var b=a.get("record");b.updateRecordArraysLater()};DS.State=Ember.State.extend({isLoaded:d,isDirty:d,isSaving:d,isDeleted:d,isError:d,isNew:d,isValid:d,dirtyType:d});var j=DS.State.extend({initialState:"uncommitted",isDirty:!0,uncommitted:DS.State.extend({enter:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameDirty(c,d)})},setProperty:h,willCommit:function(a){a.transitionTo("inFlight")},becameClean:function(b){var c=a(b,"record"),d=a(this,"dirtyType");c.withTransaction(function(a){a.recordBecameClean(d,c)}),b.transitionTo("loaded.saved")},becameInvalid:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameInFlight(c,d)}),b.transitionTo("invalid")},rollback:function(b){a(b,"record").rollback()}}),inFlight:DS.State.extend({isSaving:!0,enter:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.becameInFlight(),d.withTransaction(function(a){a.recordBecameInFlight(c,d)})},didCommit:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameClean("inflight",d)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks",c)},becameInvalid:function(c,d){var e=a(c,"record");b(e,"errors",d),e.restoreDirtyFactors(),c.transitionTo("invalid"),c.send("invokeLifecycleCallbacks")},becameError:function(a){a.transitionTo("error"),a.send("invokeLifecycleCallbacks")}}),invalid:DS.State.extend({isValid:!1,exit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)})},deleteRecord:function(b){a(b,"record").clearRelationships(),b.transitionTo("deleted")},setProperty:function(c,d){var e=a(c,"record"),g=a(e,"errors"),i=d.key;b(g,i,null),f(g)||c.send("becameValid"),h(c,d)},rollback:function(a){a.send("becameValid"),a.send("rollback")},becameValid:function(a){a.transitionTo("uncommitted")},invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("becameInvalid",c)}})}),k=j.create({dirtyType:"created",isNew:!0,setup:function(b){var c=a(b,"record");c.addDirtyFactor("@created")},exit:function(b){var c=a(b,"record");c.removeDirtyFactor("@created")}}),l=j.create({dirtyType:"updated"});k.states.uncommitted.reopen({deleteRecord:function(b){var c=a(b,"record");c.clearRelationships(),c.withTransaction(function(a){a.recordIsMoving("created",c)}),b.transitionTo("deleted.saved")}}),k.states.uncommitted.reopen({rollback:function(a){this._super(a),a.transitionTo("deleted.saved")}}),l.states.uncommitted.reopen({deleteRecord:function(b){var c=a(b,"record");a(b,"record").clearRelationships(),c.withTransaction(function(a){a.recordIsMoving("updated",c)}),b.transitionTo("deleted")}});var m={rootState:Ember.State.create({isLoaded:!1,isDirty:!1,isSaving:!1,isDeleted:!1,isError:!1,isNew:!1,isValid:!0,empty:DS.State.create({loadingData:function(a){a.transitionTo("loading")},loadedData:function(a){g(a),a.transitionTo("loaded.created")}}),loading:DS.State.create({exit:function(b){var c=a(b,"record");c.trigger("didLoad")},loadedData:function(a){g(a),a.transitionTo("loaded")}}),loaded:DS.State.create({initialState:"saved",isLoaded:!0,saved:DS.State.create({setProperty:h,didChangeData:g,loadedData:g,becameDirty:function(a){a.transitionTo("updated")},deleteRecord:function(b){a(b,"record").clearRelationships(),b.transitionTo("deleted")},willCommit:function(a){a.transitionTo("relationshipsInFlight")},invokeLifecycleCallbacks:function(b,c){var d=a(b,"record");c==="created"?d.trigger("didCreate",d):d.trigger("didUpdate",d)}}),relationshipsInFlight:Ember.State.create({enter:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameInFlight("clean",c)})},didCommit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks")}}),created:k,updated:l}),deleted:DS.State.create({initialState:"uncommitted",dirtyType:"deleted",isDeleted:!0,isLoaded:!0,isDirty:!0,setup:function(b){var c=a(b,"record"),d=a(c,"store");c.addDirtyFactor("@deleted"),d.removeFromRecordArrays(c)},exit:function(b){var c=a(b,"record");c.removeDirtyFactor("@deleted")},uncommitted:DS.State.create({enter:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameDirty("deleted",c)})},willCommit:function(a){a.transitionTo("inFlight")},rollback:function(b){a(b,"record").rollback()},becameClean:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("deleted",c)}),b.transitionTo("loaded.saved")}}),inFlight:DS.State.create({isSaving:!0,enter:function(b){var c=a(b,"record");c.becameInFlight(),c.withTransaction(function(a){a.recordBecameInFlight("deleted",c)})},didCommit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks")}}),saved:DS.State.create({isDirty:!1,invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("didDelete",c)}})}),error:DS.State.create({isError:!0,invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("becameError",c)}})})};DS.StateManager=Ember.StateManager.extend({record:null,initialState:"rootState",states:m})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.none,d=Ember.computed(function(b){return a(a(this,"stateManager.currentState"),b)}).property("stateManager.currentState").cacheable();DS.Model=Ember.Object.extend(Ember.Evented,{isLoaded:d,isDirty:d,isSaving:d,isDeleted:d,isError:d,isNew:d,isValid:d,clientId:null,transaction:null,stateManager:null,errors:null,toJSON:function(b){var c=a(this,"store");return c.toJSON(this,b)},didLoad:Ember.K,didUpdate:Ember.K,didCreate:Ember.K,didDelete:Ember.K,becameInvalid:Ember.K,becameError:Ember.K,data:Ember.computed(function(){return this._data||this.materializeData(),this._data}).property().cacheable(),materializeData:function(){this.setupData(),a(this,"store").materializeData(this),this.suspendAssociationObservers(function(){this.notifyPropertyChange("data")})},_data:null,init:function(){var a=DS.StateManager.create({record:this});b(this,"stateManager",a),this.setup(),a.goToState("empty")},setup:function(){this._relationshipChanges={},this._dirtyFactors=Ember.OrderedSet.create(),this._dirtyReasons={hasMany:0,belongsTo:0,attribute:0}},willDestroy:function(){a(this,"isDeleted")||this.deleteRecord()},send:function(b,c){return a(this,"stateManager").send(b,c)},withTransaction:function(b){var c=a(this,"transaction");c&&b(c)},setProperty:function(a,b){this.send("setProperty",{key:a,value:b})},deleteRecord:function(){this.send("deleteRecord")},clearRelationships:function(){this.eachAssociation(function(c,d){d.kind==="belongsTo"?b(this,c,null):d.kind==="hasMany"&&a(this,c).clear()},this)},updateRecordArrays:function(){var b=a(this,"store");b&&b.hashWasUpdated(this.constructor,a(this,"clientId"),this)},adapterDidCommit:function(){var b=a(this,"data").attributes;a(this.constructor,"attributes").forEach(function(c,d){b[c]=a(this,c)},this),this.updateRecordArraysLater()},dataDidChange:Ember.observer(function(){var c=a(this.constructor,"associationsByName"),d=a(this,"data").hasMany,e=a(this,"store"),f=e.idToClientId,g;this.updateRecordArraysLater(),c.forEach(function(a,c){if(c.kind==="hasMany"){g=this.cacheFor(a);if(g){var f=a,h=d[f]||[],i;i=Ember.EnumerableUtils.map(h,function(a){return e.clientIdForId(c.type,a)}),b(g,"content",Ember.A(i))}}},this)},"data"),updateRecordArraysLater:function(){Ember.run.once(this,this.updateRecordArrays)},setupData:function(){this._data={attributes:{},belongsTo:{},hasMany:{},id:null}},materializeId:function(a){b(this,"id",a)},materializeAttributes:function(a){this._data.attributes=a},materializeAttribute:function(a,b){this._data.attributes[a]=b},materializeHasMany:function(a,b){this._data.hasMany[a]=b},materializeBelongsTo:function(a,b){this._data.belongsTo[a]=b},addDirtyFactor:function(a){var b=this._dirtyFactors,c;if(b.has(a))return;this._dirtyFactors.isEmpty()&&(c=!0),this._addDirtyFactor(a),c&&a!=="@created"&&a!=="@deleted"&&this.send("becameDirty")},_addDirtyFactor:function(b){this._dirtyFactors.add(b);var c=a(this.constructor,"fields").get(b);this._dirtyReasons[c]++},removeDirtyFactor:function(b){var c=this._dirtyFactors,d=!0;if(!c.has(b))return;this._dirtyFactors.remove(b);var e=a(this.constructor,"fields").get(b);this._dirtyReasons[e]--,this._dirtyFactors.isEmpty()||(d=!1),d&&b!=="@created"&&b!=="@deleted"&&this.send("becameClean")},removeDirtyFactors:function(){this._dirtyFactors.clear(),this._dirtyReasons={hasMany:0,belongsTo:0,attribute:0},this.send("becameClean")},rollback:function(){this.setup(),this.send("becameClean"),this.suspendAssociationObservers(function(){this.notifyPropertyChange("data")})},isDirtyBecause:function(a){return this._dirtyReasons[a]>0},isCommittingBecause:function(a){return this._inFlightDirtyReasons[a]>0},suspendAssociationObservers:function(b,c){var d=a(this.constructor,"associationNames").belongsTo,e=this;try{this._suspendedAssociations=!0,Ember._suspendObservers(e,d,null,"belongsToDidChange",function(){Ember._suspendBeforeObservers(e,d,null,"belongsToWillChange",function(){b.call(c||e)})})}finally{this._suspendedAssociations=!1}},becameInFlight:function(){this._inFlightDirtyFactors=this._dirtyFactors.copy(),this._inFlightDirtyReasons=this._dirtyReasons,this._dirtyFactors.clear(),this._dirtyReasons={hasMany:0,belongsTo:0,attribute:0}},restoreDirtyFactors:function(){this._inFlightDirtyFactors.forEach(function(a){this._addDirtyFactor(a)},this),this._inFlightDirtyFactors.clear(),this._inFlightDirtyReasons=null},removeInFlightDirtyFactor:function(a){this._inFlightDirtyFactors.has(a)&&(this._inFlightDirtyFactors.remove(a),this._inFlightDirtyFactors.isEmpty()&&(this._inFlightDirtyReasons=null,this.send("didCommit")))},removeInFlightDirtyFactors:function(){this._inFlightDirtyFactors.isEmpty()||(this._inFlightDirtyFactors.clear(),this._inFlightDirtyReasons=null,this.send("didCommit"))},adapterDidUpdateAttribute:function(b,c){this.removeInFlightDirtyFactor(b),c!==undefined?(a(this,"data.attributes")[b]=c,this.notifyPropertyChange(b)):(c=a(this,b),a(this,"data.attributes")[b]=c),this.updateRecordArraysLater()},adapterDidUpdateRelationship:function(a){var b=this._relationshipChanges[a];b.didUpdateRelationship(a,this),this.updateRecordArraysLater()},adapterDidDelete:function(){this.removeInFlightDirtyFactor("@deleted"),this.updateRecordArraysLater()},adapterDidCreate:function(){this.removeInFlightDirtyFactor("@created"),this.updateRecordArraysLater()},trigger:function(a){Ember.tryInvoke(this,a,[].slice.call(arguments,1)),this._super.apply(this,arguments)}});var e=function(b){return function(){var c=a(DS,"defaultStore"),d=[].slice.call(arguments);return d.unshift(this),c[b].apply(c,d)}};DS.Model.reopenClass({isLoaded:e("recordIsLoaded"),find:e("find"),filter:e("filter"),_create:DS.Model.create,create:function(){throw new Ember.Error("You should not call `create` on a model. Instead, call `createRecord` with the attributes you would like to set.")},createRecord:e("createRecord")})}(),function(){function b(b,c,d){var e=a(b,"data").attributes,f=e[d];return f===undefined&&(f=c.defaultValue),f}var a=Ember.get;DS.Model.reopenClass({attributes:Ember.computed(function(){var a=Ember.Map.create();return this.eachComputedProperty(function(b,c){c.isAttribute&&(c.name=b,a.set(b,c))}),a}).cacheable()}),DS.Model.reopen({eachAttribute:function(b,c){a(this.constructor,"attributes").forEach(function(a,d){b.call(c,a,d)},c)}}),DS.attr=function(a,c){c=c||{};var d={type:a,isAttribute:!0,options:c};return Ember.computed(function(a,d){var e;return arguments.length===2?this.setProperty(a,d):d=b(this,c,a),d}).property("data").cacheable().meta(d)}}(),function(){}(),function(){var a=Ember.get,b=Ember.set,c=Ember.none,d=function(b,c,d){c=c||{};var e={type:b,isAssociation:!0,options:c,kind:"belongsTo"};return Ember.computed(function(c,d){if(arguments.length===2)return d===undefined?null:d;var e=a(this,"data").belongsTo,f=a(this,"store"),g;return typeof b=="string"&&(b=a(this,b,!1)||a(window,b)),g=e[c],g?f.find(b,g):null}).property("data").cacheable().meta(e)};DS.belongsTo=function(a,b){return d(a,b)},DS.Model.reopen({belongsToWillChange:Ember.beforeObserver(function(b,c){!b.hasChildChange(c)&&a(b,"isLoaded")&&b.addChildChange(c,DS.OneToManyChange.create({oldParent:a(b,c),belongsToName:c,child:b}))}),belongsToDidChange:Ember.immediateObserver(function(b,c){if(a(b,"isLoaded")){var d=b.getChildChange(c),e=a(b,c);d.newParent=e,d.sync()}}),hasChildChange:function(a){return a in this._relationshipChanges},eachRelationshipChange:function(a,b){for(var c in this._relationshipChanges){if(!this._relationshipChanges.hasOwnProperty(c))continue;a.call(b,c,this._relationshipChanges[c])}},getChildChange:function(a){return this._relationshipChanges[a]},getRelationshipChange:function(a){return this._relationshipChanges[a]},addChildChange:function(b,c){a(this,"transaction").relationshipBecameDirty(c),this._relationshipChanges[b]=c},destroyChildChange:function(b){var c=this._relationshipChanges[b];a(this,"transaction").relationshipBecameClean(c),delete this._relationshipChanges[b]},destroyParentChange:function(a,b){this._relationshipChanges[a].remove(b)}})}(),function(){var a=Ember.get,b=Ember.set,c=function(c,d){d=d||{};var e={type:c,isAssociation:!0,options:d,kind:"hasMany"};return Ember.computed(function(d,e){var f=a(this,"data").hasMany,g=a(this,"store"),h,i;return typeof c=="string"&&(c=a(this,c,!1)||a(window,c)),h=f[d],i=g.findMany(c,h||[]),b(i,"owner",this),b(i,"name",d),i}).property().cacheable().meta(e)};DS.hasMany=function(a,b){return c(a,b)}}(),function(){var a=Ember.get,b=Ember.set;DS.Model.reopen({didDefineProperty:function(a,b,c){if(c instanceof Ember.Descriptor){var d=c.meta();d.isAssociation&&d.kind==="belongsTo"&&(Ember.addObserver(a,b,null,"belongsToDidChange"),Ember.addBeforeObserver(a,b,null,"belongsToWillChange"))}}}),DS.Model.reopenClass({typeForAssociation:function(b){var c=a(this,"associationsByName").get(b);return c&&c.type},associations:Ember.computed(function(){var b=Ember.Map.create();return this.eachComputedProperty(function(c,d){if(d.isAssociation){var e=d.type,f=b.get(e);typeof e=="string"&&(e=a(this,e,!1)||a(window,e),d.type=e),f||(f=[],b.set(e,f)),f.push({name:c,kind:d.kind})}}),b}).cacheable(),associationNames:Ember.computed(function(){var a={hasMany:[],belongsTo:[]};return this.eachComputedProperty(function(b,c){c.isAssociation&&a[c.kind].push(b)}),a}).cacheable(),associationsByName:Ember.computed(function(){var b=Ember.Map.create(),c;return this.eachComputedProperty(function(d,e){e.isAssociation&&(e.key=d,c=e.type,typeof c=="string"&&(c=a(this,c,!1)||a(window,c),e.type=c),b.set(d,e))}),b}).cacheable(),fields:Ember.computed(function(){var a=Ember.Map.create(),b;return this.eachComputedProperty(function(b,c){c.isAssociation?a.set(b,c.kind):c.isAttribute&&a.set(b,"attribute")}),a}).cacheable()}),DS.Model.reopen({eachAssociation:function(b,c){a(this.constructor,"associationsByName").forEach(function(a,d){b.call(c,a,d)})}}),DS.inverseNameFor=function(b,c,d){var e=a(b,"associations"),f=e.get(c),g,h,i;if(!f)return;for(var j=0,k=f.length;j<k;j++){g=f[j];if(g.kind===d){h=g;break}}if(h)return h.name},DS.inverseTypeFor=function(b,c){var d=a(b,"associationsByName"),e=d.get(c);if(e)return e.type}}(),function(){var a=Ember.get,b=Ember.set;DS.OneToManyChange=function(a){this.oldParent=a.oldParent,this.child=a.child,this.belongsToName=a.belongsToName,this.commited={}},DS.OneToManyChange.create=function(a){return new DS.OneToManyChange(a)},DS.OneToManyChange.forChildAndParent=function(a,b){var c=DS.inverseNameFor(a.constructor,b.constructor,"belongsTo"),d=a.getChildChange(c);return d||(d=DS.OneToManyChange.create({belongsToName:name,child:a}),a.addChildChange(c,d)),d},DS.OneToManyChange.prototype={destroy:function(){var a=this.oldParent,b=this.newParent,c=this.child,d=this.getBelongsToName(),e=this.getHasManyName();c.destroyChildChange(d),c.removeDirtyFactor(d),a&&a.removeDirtyFactor(e),b&&b.removeDirtyFactor(e)},ensureSameTransaction:function(b,c,d,e,f){var g=Ember.A([a(b,"transaction")]);c&&g.pushObject(a(c,"transaction")),d&&
g.pushObject(a(d,"transaction"));var h=g.reduce(function(b,c){return!a(c,"isDefault")&&b===null?c:b},null);h&&(h.add(b),c&&h.add(c),d&&h.add(d))},sync:function(){var c=this.oldParent,d=this.newParent,e=this.child,f=this.getHasManyName(),g=this.getBelongsToName();c===undefined&&(c=this.oldParent=e.get(g));if(c===d){var h=this.lastParent;h&&a(h,f).removeObject(e),c&&a(c,f).addObject(e),this.destroy();return}this.ensureSameTransaction(e,c,d,f,g),c&&(a(c,f).removeObject(e),a(c,"isLoaded")&&c.addDirtyFactor(f)),d&&(a(d,f).addObject(e),a(d,"isLoaded")&&d.addDirtyFactor(f)),a(e,g)!==d&&b(e,g,d),a(e,"isLoaded")&&e.addDirtyFactor(g),this.lastParent=d},getHasManyName:function(){var a=this.hasManyName,b;if(!a){b=this.oldParent||this.newParent;if(!b)return;var c=DS.inverseTypeFor(this.child.constructor,this.belongsToName);a=DS.inverseNameFor(c,this.child.constructor,"hasMany"),this.hasManyName=a}return a},getBelongsToName:function(){var a=this.belongsToName,b;if(!a){b=this.oldParent||this.newParent;if(!b)return;a=DS.inverseNameFor(this.child.constructor,b.constructor,"belongsTo"),this.belongsToName=a}return a},didUpdateRelationship:function(a,b){var c=this.committed,d=this.oldParent,e=this.newParent,f=this.child;d===null&&(c.oldParent=!0),e===null&&(c.newParent=!0);var g=this.getBelongsToName(),h=this.getHasManyName();a===g?c.child=!0:this.oldParent===b?c.oldParent=!0:c.newParent=!0,c.child&&c.oldParent&&c.newParent&&(d&&d.removeInFlightDirtyFactor(h),e&&e.removeInFlightDirtyFactor(h),f&&f.removeInFlightDirtyFactor(g),this.destroy())}}}(),function(){}(),function(){var a=Ember.set;Ember.onLoad("Ember.Application",function(b){b.registerInjection({name:"store",before:"controllers",injection:function(b,c,d){d==="Store"&&a(c,"store",b[d].create())}}),b.registerInjection({name:"giveStoreToControllers",injection:function(a,b,c){if(c.match(/Controller$/)){var d=c.charAt(0).toLowerCase()+c.substr(1),e=b.get("store"),f=b.get(d);f.set("store",e)}}})})}(),function(){var a=Ember.get,b=Ember.set,c={fromJSON:function(a){return a},toJSON:function(a){return a}};DS.Serializer=Ember.Object.extend({init:function(){this.transforms={string:c,number:c,"boolean":c},this.mappings=Ember.Map.create()},_keyForAttributeName:function(a,b){return this._keyForJSONKey("keyForAttributeName",a,b)},keyForAttributeName:function(a,b){return b},_keyForBelongsTo:function(a,b){return this._keyForJSONKey("keyForBelongsTo",a,b)},keyForBelongsTo:function(a,b){return this.keyForAttributeName(a,b)},_keyForHasMany:function(a,b){return this._keyForJSONKey("keyForHasMany",a,b)},keyForHasMany:function(a,b){return this.keyForAttributeName(a,b)},_keyForJSONKey:function(a,b,c){var d=this.mappingForType(b),e=d&&d[c],f=e&&e.key;return f?f:this[a](b,c)},_primaryKey:function(a){var b=this.mappingForType(a),c=b&&b.primaryKey;return c?c:this.primaryKey(a)},primaryKey:function(a){return"id"},transformValueToJSON:function(a,b){var c=this.transforms[b];return c.toJSON(a)},toJSON:function(b,c){c=c||{};var d={},e;return c.includeId&&(e=a(b,"id"))&&this.addId(d,b.constructor,e),this.addAttributes(d,b),this.addRelationships(d,b),d},addAttributes:function(a,b){b.eachAttribute(function(c,d){this.addAttribute(a,b,c,d.type)},this)},addAttribute:function(b,c,d,e){var f=this._keyForAttributeName(c.constructor,d),g=a(c,d);b[f]=this.transformValueToJSON(g,e)},addId:function(a,b,c){var d=this._primaryKey(b);a[d]=c},addRelationships:function(a,b){b.eachAssociation(function(c,d){var e=this._keyForAttributeName(b.constructor,c);d.kind==="belongsTo"?this.addBelongsTo(a,b,e,d):d.kind==="hasMany"&&this.addHasMany(a,b,e,d)},this)},addBelongsTo:Ember.K,addHasMany:Ember.K,transformValueFromJSON:function(a,b){var c=this.transforms[b];return c.fromJSON(a)},materializeFromJSON:function(b,c){Ember.none(a(b,"id"))&&b.materializeId(this.extractId(b.constructor,c)),this.materializeAttributes(b,c),this.materializeRelationships(b,c)},materializeAttributes:function(a,b){a.eachAttribute(function(c,d){this.materializeAttribute(a,b,c,d.type)},this)},materializeAttribute:function(a,b,c,d){var e=this.extractAttribute(a.constructor,b,c);e=this.transformValueFromJSON(e,d),a.materializeAttribute(c,e)},extractAttribute:function(a,b,c){var d=this._keyForAttributeName(a,c);return b[d]},extractId:function(a,b){var c=this._primaryKey(a);return b[c]},materializeRelationships:function(a,b){a.eachAssociation(function(c,d){d.kind==="hasMany"?a.materializeHasMany(c,this.extractHasMany(a,b,d)):d.kind==="belongsTo"&&a.materializeBelongsTo(c,this.extractBelongsTo(a,b,d))},this)},extractHasMany:function(a,b,c){var d=this._keyForHasMany(a.constructor,c.key);return b[d]},extractBelongsTo:function(a,b,c){var d=this._keyForBelongsTo(a.constructor,c.key);return b[d]},registerTransform:function(a,b){this.transforms[a]=b},map:function(a,b){this.mappings.set(a,b)},mappingForType:function(a){return this._reifyMappings(),this.mappings.get(a)},_reifyMappings:function(){if(this._didReifyMappings)return;var a=this.mappings,b=Ember.Map.create();a.forEach(function(a,c){if(typeof a=="string"){var d=Ember.get(window,a);b.set(d,c)}else b.set(a,c)}),this.mappings=b,this._didReifyMappings=!0}})}(),function(){var a=Ember.get,b=Ember.set;DS.Adapter=Ember.Object.extend({init:function(){var c=a(this,"serializer");Ember.Object.detect(c)&&(c=c.create(),b(this,"serializer",c)),this.registerSerializerTransforms(this.constructor,c,{}),this.registerSerializerMappings(this.constructor,c)},registerSerializerTransforms:function(a,b,c){var d=a._registeredTransforms,e,f;for(f in d){if(!d.hasOwnProperty(f)||f in c)continue;c[f]=!0,b.registerTransform(f,d[f])}(e=a.superclass)&&this.registerSerializerTransforms(e,b,c)},registerSerializerMappings:function(a,b){var c=a._registeredMappings,d,e;(d=a.superclass)&&this.registerSerializerMappings(d,b);if(!c)return;c.forEach(function(a,c){b.map(a,c)},this)},find:null,serializer:DS.Serializer,registerTransform:function(b,c){a(this,"serializer").registerTransform(b,c)},generateIdForRecord:null,materialize:function(b,c){a(this,"serializer").materializeFromJSON(b,c)},toJSON:function(b,c){return a(this,"serializer").toJSON(b,c)},extractId:function(b,c){return a(this,"serializer").extractId(b,c)},shouldCommit:function(a){return!0},groupByType:function(a){var b=Ember.MapWithDefault.create({defaultValue:function(){return Ember.A()}});return a.forEach(function(a){b.get(a.constructor).pushObject(a)}),b},commit:function(a,b){var c=Ember.A();b.updated.forEach(function(b){var d=this.shouldCommit(b);d?c.pushObject(b):a.didSaveRecord(b)},this),b.updated=c,this.save(a,b)},save:function(a,b){this.groupByType(b.created).forEach(function(b,c){this.createRecords(a,b,c.slice())},this),this.groupByType(b.updated).forEach(function(b,c){this.updateRecords(a,b,c.slice())},this),this.groupByType(b.deleted).forEach(function(b,c){this.deleteRecords(a,b,c.slice())},this)},createRecords:function(a,b,c){c.forEach(function(c){this.createRecord(a,b,c)},this)},updateRecords:function(a,b,c){c.forEach(function(c){this.updateRecord(a,b,c)},this)},deleteRecords:function(a,b,c){c.forEach(function(c){this.deleteRecord(a,b,c)},this)},findMany:function(a,b,c){c.forEach(function(c){this.find(a,b,c)},this)}}),DS.Adapter.reopenClass({registerTransform:function(a,b){var c=this._registeredTransforms||{};c[a]=b,this._registeredTransforms=c},map:function(a,b){var c=this._registeredMappings||Ember.MapWithDefault.create({defaultValue:function(){return{}}}),d=c.get(a);for(var e in b){if(!b.hasOwnProperty(e))continue;d[e]=b[e]}this._registeredMappings=c}})}(),function(){var a=Ember.get;DS.FixtureAdapter=DS.Adapter.extend({simulateRemoteResponse:!0,latency:50,fixturesForType:function(a){return a.FIXTURES?Ember.A(a.FIXTURES):null},queryFixtures:function(a,b){return a},mockJSON:function(a,b){return b.toJSON({associations:!0})},generateIdForRecord:function(a,b){return Ember.guidFor(b)},find:function(a,b,c){var d=this.fixturesForType(b);d&&(d=d.findProperty("id",c)),d&&this.simulateRemoteCall(function(){a.load(b,d)},a,b)},findMany:function(a,b,c){var d=this.fixturesForType(b);d&&(d=d.filter(function(a){return c.indexOf(a.id)!==-1})),d&&this.simulateRemoteCall(function(){a.loadMany(b,d)},a,b)},findAll:function(a,b){var c=this.fixturesForType(b);this.simulateRemoteCall(function(){a.loadMany(b,c)},a,b)},findQuery:function(a,b,c,d){var e=this.fixturesForType(b);e=this.queryFixtures(e,c),e&&this.simulateRemoteCall(function(){d.load(e)},a,b)},createRecord:function(a,b,c){var d=this.mockJSON(b,c);d.id=this.generateIdForRecord(a,c),this.simulateRemoteCall(function(){a.didSaveRecord(c,d)},a,b,c)},updateRecord:function(a,b,c){var d=this.mockJSON(b,c);this.simulateRemoteCall(function(){a.didSaveRecord(c,d)},a,b,c)},deleteRecord:function(a,b,c){this.simulateRemoteCall(function(){a.didSaveRecord(c)},a,b,c)},simulateRemoteCall:function(b,c,d,e){a(this,"simulateRemoteResponse")?setTimeout(b,a(this,"latency")):b()}}),DS.fixtureAdapter=DS.FixtureAdapter.create()}(),function(){var a=Ember.get,b=Ember.set,c=DS.Serializer.create({keyForBelongsTo:function(a,b){return this.keyForAttributeName(a,b)+"_id"},keyForAttributeName:function(a,b){return Ember.String.decamelize(b)}});DS.RESTAdapter=DS.Adapter.extend({bulkCommit:!1,serializer:c,shouldCommit:function(a){if(a.isCommittingBecause("attribute")||a.isCommittingBecause("belongsTo"))return!0},createRecord:function(a,b,c){var d=this.rootForType(b),e={};e[d]=this.toJSON(c,{includeId:!0}),this.ajax(this.buildURL(d),"POST",{data:e,context:this,success:function(d){this.didCreateRecord(a,b,c,d)}})},didCreateRecord:function(a,b,c,d){var e=this.rootForType(b);this.sideload(a,b,d,e),a.didSaveRecord(c,d[e])},createRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(function(a){return this.toJSON(a,{includeId:!0})},this),this.ajax(this.buildURL(e),"POST",{data:g,context:this,success:function(a){this.didCreateRecords(b,c,d,a)}})},didCreateRecords:function(a,b,c,d){var e=this.pluralize(this.rootForType(b));this.sideload(a,b,d,e),a.didSaveRecords(c,d[e])},updateRecord:function(b,c,d){var e=a(d,"id"),f=this.rootForType(c),g={};g[f]=this.toJSON(d),this.ajax(this.buildURL(f,e),"PUT",{data:g,context:this,success:function(a){this.didUpdateRecord(b,c,d,a)}})},didUpdateRecord:function(a,b,c,d){var e=this.rootForType(b);this.sideload(a,b,d,e),a.didSaveRecord(c,d&&d[e])},updateRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(this.toJSON,this),this.ajax(this.buildURL(e,"bulk"),"PUT",{data:g,context:this,success:function(a){this.didUpdateRecords(b,c,d,a)}})},didUpdateRecords:function(a,b,c,d){var e=this.pluralize(this.rootForType(b));this.sideload(a,b,d,e),a.didSaveRecords(c,d[e])},deleteRecord:function(b,c,d){var e=a(d,"id"),f=this.rootForType(c);this.ajax(this.buildURL(f,e),"DELETE",{context:this,success:function(a){this.didDeleteRecord(b,c,d,a)}})},didDeleteRecord:function(a,b,c,d){d&&this.sideload(a,b,d),a.didSaveRecord(c)},deleteRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(function(b){return a(b,"id")}),this.ajax(this.buildURL(e,"bulk"),"DELETE",{data:g,context:this,success:function(a){this.didDeleteRecords(b,c,d,a)}})},didDeleteRecords:function(a,b,c,d){d&&this.sideload(a,b,d),a.didSaveRecords(c)},find:function(a,b,c){var d=this.rootForType(b);this.ajax(this.buildURL(d,c),"GET",{success:function(c){this.sideload(a,b,c,d),a.load(b,c[d])}})},findMany:function(a,b,c){var d=this.rootForType(b),e=this.pluralize(d);this.ajax(this.buildURL(d),"GET",{data:{ids:c},success:function(c){this.sideload(a,b,c,e),a.loadMany(b,c[e])}})},findAll:function(a,b){var c=this.rootForType(b),d=this.pluralize(c);this.ajax(this.buildURL(c),"GET",{success:function(c){this.sideload(a,b,c,d),a.loadMany(b,c[d])}})},findQuery:function(a,b,c,d){var e=this.rootForType(b),f=this.pluralize(e);this.ajax(this.buildURL(e),"GET",{data:c,success:function(c){this.sideload(a,b,c,f),d.load(c[f])}})},plurals:{},pluralize:function(a){return this.plurals[a]||a+"s"},rootForType:function(a){if(a.url)return a.url;var b=a.toString().split("."),c=b[b.length-1];return c.replace(/([A-Z])/g,"_$1").toLowerCase().slice(1)},ajax:function(a,b,c){c.url=a,c.type=b,c.dataType="json",c.contentType="application/json; charset=utf-8",c.context=this,c.data&&b!=="GET"&&(c.data=JSON.stringify(c.data)),jQuery.ajax(c)},sideload:function(b,c,d,e){var f,g,h={};h[e]=!0;for(var i in d){if(!d.hasOwnProperty(i))continue;if(i===e)continue;f=c.typeForAssociation(i),f||(g=a(this,"mappings"),f=a(g,i),typeof f=="string"&&(f=a(window,f))),this.sideloadAssociations(b,f,d,i,h)}},sideloadAssociations:function(b,c,d,e,f){f[e]=!0,a(c,"associationsByName").forEach(function(a,c){a=c.key||a,c.kind==="belongsTo"&&(a=this.pluralize(a)),d[a]&&!f[a]&&this.sideloadAssociations(b,c.type,d,a,f)},this),this.loadValue(b,c,d[e])},loadValue:function(a,b,c){c instanceof Array?a.loadMany(b,c):a.load(b,c)},buildURL:function(a,b){var c=[""];return this.namespace!==undefined&&c.push(this.namespace),c.push(this.pluralize(a)),b!==undefined&&c.push(b),c.join("/")}})}(),function(){}(),function(){}()